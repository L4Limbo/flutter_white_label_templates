plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.white_label_mp"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.white_label_mp"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        profile {
            applicationIdSuffix ".profile"
        }
        release {
            signingConfig signingConfigs.debug
        }
    }

    // Define the flavor dimension and associate your flavors with it
    flavorDimensions "label"

    productFlavors {
        base {
            dimension "label"
            applicationId getFlavorProperty("APP_ID", "base")
            resValue "string", "app_name", getFlavorProperty("APP_NAME", "base")
            sourceSets.base.res.srcDirs += ['src/base', 'src/base/res']
        }
        premium {
            dimension "label"
            applicationId getFlavorProperty("APP_ID", "premium")
            resValue "string", "app_name", getFlavorProperty("APP_NAME", "premium")
            sourceSets.premium.res.srcDirs += ['src/premium', 'src/premium/res']
        }
    }
}

flutter {
    source = "../.."
}

def getFlavorPropertyFile(flavor) {
    return rootProject.file("${flavor}.properties")
}

def getFlavorProperty(propertyName, flavor) {
    Properties properties = new Properties()
    File propFile = getFlavorPropertyFile(flavor)
    if (propFile.exists()) {
        properties.load(new FileInputStream(propFile))
        return properties.getProperty(propertyName)
    }
    return null
}
